{"version":3,"sources":["App.js","index.js"],"names":["getEthereumObject","window","ethereum","findMetaMaskAccount","a","console","log","request","method","accounts","length","account","error","App","useState","currentAccount","setCurrentAccount","useEffect","then","connectWallet","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"0NAMMA,G,MAAoB,WAAH,OAASC,OAAOC,WAMjCC,EAAmB,uCAAG,gCAAAC,EAAA,sDAEa,GAFb,SAElBF,EAAWF,IAEH,CAAD,eAC0C,OAArDK,QAAQC,IAAI,yCAAyC,kBAC9C,MAAI,OAIb,OAFAD,QAAQC,IAAI,oBAAqBJ,GAEjC,SACuBA,EAASK,QAAQ,CAAEC,OAAQ,iBAAkB,KAAD,EAGnE,GAHMC,EAAQ,OACdJ,QAAQC,IAAI,yBAA0BG,GAGd,IAApBA,EAASC,OAAY,iBAE+B,OADhDC,EAAUF,EAAS,GACzBJ,QAAQC,IAAI,gCAAiCK,GAAS,kBAC/CA,GAAO,QAE8B,OAA5CN,QAAQC,IAAI,gCAAgC,kBACrC,MAAI,gCAIQ,OAJR,0BAIbD,QAAQO,MAAM,EAAD,IAAQ,kBACd,MAAI,0DAEd,kBA5BwB,mCA8FVC,EAhEH,WACV,MAA4CC,mBAAS,IAAG,mBAAjDC,EAAc,KAAEC,EAAiB,KAMxCC,qBAAU,WACRd,IAAsBe,MAAK,SAACP,GACV,OAAZA,GACFK,EAAkBL,QAGrB,IAKH,IAAMQ,EAAa,uCAAG,8BAAAf,EAAA,sDAEmB,GAFnB,SAEZF,EAAWF,IACH,CAAD,eAC8B,OAAzCK,QAAQC,IAAI,6BAA6B,0CAIrBJ,EAASK,QAAQ,CAAEC,OAAQ,wBAAyB,KAAD,EAAnEG,EAAO,OAEbN,QAAQC,IAAI,+BAAgCK,EAAQ,IACpDK,EAAkBL,EAAQ,IAAG,kDAE7BN,QAAQO,MAAM,EAAD,IAAQ,0DAExB,kBAfkB,mCAqBnB,OACE,uBAAKQ,UAAU,iBACb,uBAAKA,UAAU,iBACb,uBAAKA,UAAU,UAAS,cAIxB,uBAAKA,UAAU,OAAM,qHAIrB,0BAAQA,UAAU,aAAaC,QAfxB,cAeuC,eAI5CN,GACA,0BAAQK,UAAU,aAAaC,QAASF,GAAe,qBC5FjEG,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.10286690.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { ethers } from \"ethers\";\nimport './App.css';\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst getEthereumObject = () => window.ethereum;\n\n/*\n * This function returns the first linked account found.\n * If there is no account linked, it will return null.\n */\nconst findMetaMaskAccount = async () => {\n  try {\n    const ethereum = getEthereumObject();\n\n    if (!ethereum) {\n      console.log(\"Make sure to have metamask installed!\");\n      return null;\n    }\n    console.log(\"Ethereum object: \", ethereum);\n\n    // Checking to see if the user has an ethereum account using special method called \"eth_accounts\" \n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n    console.log(\"List of all accounts: \", accounts);\n\n    // User can have multiple accounts in their wallet so in that case we will be picking the first one.\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account: \", account);\n      return account;\n    } else {\n      console.log(\"No authorized account found.\");\n      return null;\n    }\n\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  /*\n   * The passed callback function will be run when the page loads.\n   * More technically, when the App component \"mounts\".\n   */\n  useEffect(() => {\n    findMetaMaskAccount().then((account) => {\n      if (account !== null) {\n        setCurrentAccount(account);\n      }\n    });\n  }, []);\n\n  /*\n   * This function will allow us to connect to the user's wallet.\n   */\n  const connectWallet = async () => {\n    try {\n      const ethereum = getEthereumObject();\n      if (!ethereum) {\n        console.log(\"Please download MetaMask!\");\n        return;\n      }\n\n      const account = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n      console.log(\"Connected with the account: \", account[0]);\n      setCurrentAccount(account[0])\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const wave = () => {\n\n  }\n\n  return (\n    <div className=\"mainContainer\">\n      <div className=\"dataContainer\">\n        <div className=\"header\">\n          Hey there!\n        </div>\n\n        <div className=\"bio\">\n          I am Vaibhav, and I am a simple individual. Thats pretty cool right? Connect your Ethereum wallet and wave at me!\n        </div>\n\n        <button className=\"waveButton\" onClick={wave}>\n          Wave at Me\n        </button>\n\n        {!currentAccount && (\n          <button className=\"waveButton\" onClick={connectWallet}>\n            Connect Wallet\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}